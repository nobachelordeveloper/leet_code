[
  { "string1": "abc", "string2": "bca", "output": true },
  { "string1": "abc", "string2": "abc", "output": true },
  { "string1": "abc", "string2": "abcd", "output": false },
  { "string1": "aabbcc", "string2": "ccbbaa", "output": true },
  { "string1": "hello", "string2": "bello", "output": false },
  { "string1": "123", "string2": "321", "output": true },
  { "string1": "abc ", "string2": "cab", "output": false },
  { "string1": "Dog", "string2": "god", "output": false },
  { "string1": "", "string2": "", "output": true },
  { "string1": " ", "string2": " ", "output": true },
  { "string1": "a", "string2": "a", "output": true },
  { "string1": "a", "string2": "b", "output": false },
  { "string1": "aabbc", "string2": "abc", "output": false },
  { "string1": "anagram", "string2": "nagaram", "output": true },
  { "string1": "test", "string2": "ttew", "output": false },
  { "string1": "python", "string2": "nothyp", "output": true },
  { "string1": "javascript", "string2": "scriptjava", "output": true },
  { "string1": "algorithm", "string2": "logarithm", "output": true },
  { "string1": "lowercase", "string2": "UPPERCASE", "output": false },
  { "string1": "spaces here", "string2": "herespaces ", "output": true },
  { "string1": "leading space", "string2": "space leading", "output": true },
  {
    "string1": "trailing space ",
    "string2": "space trailing",
    "output": false
  },
  { "string1": "123abc", "string2": "a1b2c3", "output": true },
  { "string1": "special!@", "string2": "!@special", "output": true },
  { "string1": "tabs\t", "string2": "\ttabs", "output": true },
  { "string1": "newline\n", "string2": "\nnewline", "output": true },
  { "string1": "caseSensitive", "string2": "Casesensitive", "output": false },
  { "string1": "underscore_", "string2": "_underscore", "output": true },
  { "string1": "dot.", "string2": ".dot", "output": true },
  { "string1": "comma,", "string2": ",comma", "output": true },
  { "string1": "mixedCases", "string2": "Mixedcases", "output": false },
  { "string1": "repeatedchars", "string2": "charsrepeated", "output": true },
  { "string1": "uniquechars", "string2": "charsunique", "output": true },
  { "string1": "sorted", "string2": "detroS", "output": false },
  { "string1": "reverse", "string2": "esrever", "output": true },
  { "string1": "Palindrome", "string2": "emordnilaP", "output": true },
  { "string1": "nonletters", "string2": "lettersnon", "output": true },
  { "string1": "with spaces", "string2": "spaces with", "output": true },
  { "string1": "with  numbers", "string2": " numbers with", "output": true },
  { "string1": "specialchars%", "string2": "%specialchars", "output": true },
  {
    "string1": "longer example here",
    "string2": "here example longer",
    "output": true
  },
  {
    "string1": "exact same length",
    "string2": "length same exact",
    "output": true
  },
  { "string1": "differentsizes", "string2": "sizedifferent", "output": false },
  { "string1": "repeat letters", "string2": "letters repeat", "output": true },
  { "string1": "case matters", "string2": "Case Matters", "output": false },
  { "string1": "punctuation!", "string2": "!punctuation", "output": true },
  { "string1": "random", "string2": "ndomra", "output": true },
  { "string1": "out of order", "string2": "of order out", "output": true },
  {
    "string1": "words twice twice",
    "string2": "twice words twice",
    "output": true
  },
  { "string1": "mirror", "string2": "rorrim", "output": true }
]
